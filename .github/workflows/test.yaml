# Try to get a short workflow name and a job name that start with Python
# version to make it easier to check the status inside GitHub UI.
name: CI

on:
  push:
    branches: [ trunk ]
    # tags:
    #   - release-*
  pull_request:
    branches: [ trunk ]

defaults:
  run:
    shell: bash

jobs:
  testing:
    runs-on: ubuntu-latest
    env:
      TOXENV: "${{ matrix.tox-env }}"
    name: ${{ matrix.tox-env }}-${{ matrix.coverage }}
    strategy:
      fail-fast: false
      matrix:
        tox-env: ['py310']
        coverage: ['yes']
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip tox coverage

    - name: Test
      run: |
        tox

    - name: Prepare coverage
      if: ${{ !cancelled() && contains(matrix['coverage'], 'yes') }}
      run: |
        # sub-process coverage are generated in separate files so we combine them
        # to get an unified coverage for the local run.
        # The XML is generate to be used with 3rd party tools like diff-cover.
        python -m coverage combine
        python -m coverage xml -o coverage.xml -i
        python -m coverage report --skip-covered

    - uses: codecov/codecov-action@v1
      if: ${{ !cancelled() && contains(matrix['coverage'], 'yes') }}
      with:
        files: coverage.xml
        fail_ci_if_error: true
        functionalities: gcov,search

  static-checks:
    runs-on: ubuntu-20.04
    env:
      TOX_PARALLEL_NO_SPINNER: 1

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip tox

    - name: Run the checks
      run: |
        python --version
        tox --parallel -e mypy,flake8,black
